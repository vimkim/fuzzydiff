#!/usr/bin/env python3
import re
import subprocess
import sys
import os


def parse_diff(lines):
    """
    Parse diff lines to extract hunk entries.
    Returns a list of strings in the format:
      "filepath:line_number<TAB>hunk_header"
    """
    entries = []
    current_file = None

    # Patterns to match file header lines and hunk headers.
    pattern_git_file = re.compile(r"^\+\+\+\s+(.*)")
    pattern_index_file = re.compile(r"^Index:\s+(.*)")
    pattern_hunk = re.compile(r"^@@\s+-\d+(?:,\d+)?\s+\+(\d+)")

    for line in lines:
        line = line.rstrip("\n")
        # For git diff file headers.
        m = pattern_git_file.match(line)
        if m:
            current_file = m.group(1)
            # Remove any leading "a/" or "b/".
            if current_file.startswith("a/") or current_file.startswith("b/"):
                current_file = current_file[2:]
            continue

        # For unified diffs generated by "diff -ur".
        m = pattern_index_file.match(line)
        if m:
            current_file = m.group(1)
            continue

        # Match hunk header lines.
        m = pattern_hunk.match(line)
        if m and current_file:
            start_line = m.group(1)
            entry = f"{current_file}:{start_line}\t{line}"
            entries.append(entry)
    return entries


def fuzzy_select(entries):
    """
    Uses fzf to let the user select one entry from the list.
    Returns the selected entry string.
    """
    try:
        fzf = subprocess.Popen(
            ["fzf", "--header=Select a diff chunk"],
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True,
        )
    except FileNotFoundError:
        print("Error: fzf is not installed or not in your PATH.", file=sys.stderr)
        sys.exit(1)

    input_data = "\n".join(entries)
    selected, _ = fzf.communicate(input_data)
    return selected.strip() if selected else None


def open_in_editor(filepath, line_number):
    """
    Opens the given file at the specified line number in the editor.
    Uses the $EDITOR environment variable, defaulting to vim.
    """
    editor = os.environ.get("EDITOR", "vim")
    subprocess.run([editor, f"+{line_number}", filepath])


def main():
    # If a filename is provided as argument, read from the file.
    # Otherwise, read from standard input.
    if len(sys.argv) >= 2:
        try:
            with open(sys.argv[1], "r", encoding="utf-8") as f:
                lines = f.readlines()
        except Exception as e:
            print(f"Error reading file {sys.argv[1]}: {e}", file=sys.stderr)
            sys.exit(1)
    else:
        lines = sys.stdin.readlines()

    entries = parse_diff(lines)

    if not entries:
        print("No diff hunk entries found.")
        sys.exit(0)

    selected = fuzzy_select(entries)
    if not selected:
        sys.exit(0)

    # Expected format: filepath:line_number<TAB>diff header
    try:
        file_line, _ = selected.split("\t", 1)
        filepath, line_str = file_line.split(":", 1)
        line_number = int(line_str)
    except ValueError:
        print("Failed to parse the selected entry:", selected, file=sys.stderr)
        sys.exit(1)

    open_in_editor(filepath, line_number)


if __name__ == "__main__":
    main()

